/* William Francis Project Part 2 */

/* DDL COMMANDS */

/* create and use the database OnlineStore */
create database OnlineStore;
use OnlineStore;

/* Setting up and creating the tables in the database */

/* Create table ADMIN with primary key AUsername */
drop table if exists ADMIN;
create table ADMIN(
	AUsername		VARCHAR(15)			not null,
	ADate			DATE,
    CONSTRAINT ADMIN_PK
		PRIMARY KEY (AUsername)
);

/* Create table MANAGES */
drop table if exists MANAGES;
create table MANAGES(
	manages_AUsername		VARCHAR(15),
    manages_WebUrl			VARCHAR(15),
	CONSTRAINT MANAGES_UNIQUE
		UNIQUE (manages_AUsername, manages_WebUrl)
);

/* Create table WEBSITE with primary key WebUrl */
drop table if exists WEBSITE;
create table WEBSITE(
	WebUrl			VARCHAR(15)			not null,
    WName			VARCHAR(15),
    CONSTRAINT WEBSITE_PK
		PRIMARY KEY (WebUrl)
);

/* Create table USED_BY */
drop table if exists USED_BY;
create table USED_BY(
	used_PersonIP		VARCHAR(15),
    used_WebUrl			VARCHAR(15),
	CONSTRAINT USED_BY_UNIQUE
		UNIQUE (used_PersonIP, used_WebUrl)
);

/* Create table PERSON with primary key PersonIP */
drop table if exists PERSON;
create table PERSON(
	PersonIP		VARCHAR(15)			not null,
    FName			VARCHAR(15)			not null,
	MName			VARCHAR(15),
    LName			VARCHAR(15)			not null,
    CONSTRAINT PERSON_PK
		PRIMARY KEY (PersonIP)
);

/* Create table CUSTOMER with primary key CId */
drop table if exists CUSTOMER;
create table CUSTOMER(
	CId				DECIMAL				not null,
    PersonIP		VARCHAR(15)			not null,
    CONSTRAINT CUSTOMER_PK
		PRIMARY KEY (CId)
);

/* Create table SUPPLIER with primary key SName */
drop table if exists SUPPLIER;
create table SUPPLIER(
	SName			VARCHAR(15)			not null,
    PersonIP		VARCHAR(15)			not null,
    CONSTRAINT SUPPLIER_PK
		PRIMARY KEY (SName)
);

/* Create table PRODUCT_PCATEGORY */
drop table if exists PRODUCT_PCATEGORY;
create table PRODUCT_PCATEGORY(
	SName				VARCHAR(15),
    PName				VARCHAR(15),
    PRODUCT_PCATEGORY	VARCHAR(15),
	CONSTRAINT PRODUCT_PCATEGORY_UNIQUE
		UNIQUE (SName, PName)
);

/* Create table PRODUCT with UNIQUE attribute PName */
drop table if exists PRODUCT;
create table PRODUCT(
	PName				VARCHAR(15)			not null,
    Supplier_SName		VARCHAR(15)			not null,
	CONSTRAINT PRODUCT_UNIQUE
		UNIQUE (PName)
);

/* Create table BENEFITS_FROM */
drop table if exists BENEFITS_FROM;
create table BENEFITS_FROM(
	BENEFITS_FROM_CId				DECIMAL,
    BENEFITS_FROM_PName				VARCHAR(15),
    BENEFITS_FROM_SName				VARCHAR(15),
	CONSTRAINT BENEFITS_FROM_UNIQUE
		UNIQUE (BENEFITS_FROM_CId)
);

/* Create table BUYS */
drop table if exists BUYS;
create table BUYS(
	BUYS_AccountUsername	VARCHAR(15),
    BUYS_PName				VARCHAR(15),
	CONSTRAINT BUYS_UNIQUE
		UNIQUE (BUYS_AccountUsername)
);

/* Create table ACCOUNT with primary keys AccountUsername & CCNum */
drop table if exists ACCOUNT;
create table ACCOUNT(
	AccountUsername		VARCHAR(15)		not null,
    CCNum				DECIMAL			not null,
    Account_CId			DECIMAL			not null,
	CONSTRAINT ACCOUNT_PK
		PRIMARY KEY (AccountUsername, CCNum)
);






/* SCHEMA MODIFICATIONS (at least one example of an ALTER command) */

/* Adding the foriegn key constraints to MANAGES */
ALTER TABLE MANAGES
ADD CONSTRAINT manages_WebUrl_FK
FOREIGN KEY (manages_WebUrl) REFERENCES WEBSITE(WebUrl)
ON DELETE SET NULL
ON UPDATE CASCADE,
ADD CONSTRAINT manages_AUsername_FK
FOREIGN KEY (manages_AUsername) REFERENCES ADMIN(AUsername)
ON DELETE SET NULL
ON UPDATE CASCADE;

/* Adding the foriegn key constraints to USED_BY */
ALTER TABLE USED_BY
ADD CONSTRAINT USED_WebUrl_FK
FOREIGN KEY (used_WebUrl) REFERENCES WEBSITE(WebUrl)
ON DELETE SET NULL
ON UPDATE CASCADE,
ADD CONSTRAINT USED_PersonIP_FK
FOREIGN KEY (used_PersonIP) REFERENCES PERSON(PersonIP)
ON DELETE RESTRICT
ON UPDATE CASCADE;


/* Adding the foriegn key constraints to SUPPLIER */
ALTER TABLE SUPPLIER
ADD CONSTRAINT SUPPLIER_PersonIP_FK
FOREIGN KEY (PersonIP) REFERENCES PERSON(PersonIP)
ON DELETE RESTRICT
ON UPDATE CASCADE;


/* Adding the foriegn key constraints to CUSTOMER */
ALTER TABLE CUSTOMER
ADD CONSTRAINT CUSTOMER_PersonIP_FK
FOREIGN KEY (PersonIP) REFERENCES PERSON(PersonIP)
ON DELETE RESTRICT
ON UPDATE CASCADE;


/* Adding the foriegn key constraints to BENEFITS_FROM */
ALTER TABLE BENEFITS_FROM
ADD CONSTRAINT BENEFITS_FROM_SName_FK
FOREIGN KEY (BENEFITS_FROM_SName) REFERENCES SUPPLIER(SName)
ON DELETE RESTRICT
ON UPDATE CASCADE,
ADD CONSTRAINT BENEFITS_FROM_PName_FK
FOREIGN KEY (BENEFITS_FROM_PName) REFERENCES PRODUCT(PName)
ON DELETE RESTRICT
ON UPDATE CASCADE,
ADD CONSTRAINT BENEFITS_FROM_CId_FK
FOREIGN KEY (BENEFITS_FROM_CId) REFERENCES CUSTOMER(CId)
ON DELETE RESTRICT
ON UPDATE CASCADE;


/* Adding the foriegn key constraints to BUYS */
ALTER TABLE BUYS
ADD CONSTRAINT BUYS_AccountUsername_FK
FOREIGN KEY (buys_AccountUsername) REFERENCES Account(AccountUsername)
ON DELETE RESTRICT
ON UPDATE CASCADE,
ADD CONSTRAINT BUYS_PName_FK
FOREIGN KEY (buys_PName) REFERENCES PRODUCT(PName)
ON DELETE RESTRICT
ON UPDATE CASCADE;


/* Adding the foriegn key constraints to PRODUCT */
ALTER TABLE PRODUCT
ADD CONSTRAINT PRODUCT_SName_FK
FOREIGN KEY (Supplier_SName) REFERENCES SUPPLIER(SName)
ON DELETE RESTRICT
ON UPDATE CASCADE;


/* Adding the foriegn key constraints to PRODUCT_PCATEGORY */
ALTER TABLE PRODUCT_PCATEGORY
ADD CONSTRAINT PRODUCT_PCATEGORY_SName_FK
FOREIGN KEY (SName) REFERENCES Supplier(SName)
ON DELETE RESTRICT
ON UPDATE CASCADE,
ADD CONSTRAINT PRODUCT_PCATEGORY_PName_FK
FOREIGN KEY (PName) REFERENCES PRODUCT(PName)
ON DELETE RESTRICT
ON UPDATE CASCADE;

/* FORIEGN KEYS DONE */




/* DONE IN TERMINAL I JUST PUT IT HERE FOR PROOF --> FILES USED WILL BE IN ZIP FOLDER "DATA" ATTACHED"


SET GLOBAL local_infile = 1;
SET SQL_SAFE_UPDATES = 0;
SET FOREIGN_KEY_CHECKS = 0;

"ACCOUNT DATA"
LOAD DATA LOCAL INFILE 'C:\Users\thewi\Desktop\DATA\ACCOUNT.dat'
REPLACE INTO TABLE ACCOUNT
FIELDS TERMINATED BY ','
OPTIONALLY ENCLOSED BY '"'
LINES TERMINATED BY '\n';

"ADMIN DATA"
LOAD DATA LOCAL INFILE 'C:\Users\thewi\Desktop\DATA\ADMIN.dat'
REPLACE INTO TABLE ADMIN
FIELDS TERMINATED BY ','
OPTIONALLY ENCLOSED BY '"'
LINES TERMINATED BY '\n';

"CUSTOMER DATA"
LOAD DATA LOCAL INFILE 'C:\Users\thewi\Desktop\DATA\CUSTOMER.dat'
REPLACE INTO TABLE CUSTOMER
FIELDS TERMINATED BY ','
OPTIONALLY ENCLOSED BY '"'
LINES TERMINATED BY '\n';

"PERSON DATA"
LOAD DATA LOCAL INFILE 'C:\Users\thewi\Desktop\DATA\PERSON.dat'
REPLACE INTO TABLE PERSON
FIELDS TERMINATED BY ','
OPTIONALLY ENCLOSED BY '"'
LINES TERMINATED BY '\n';

"PRODUCT DATA"
LOAD DATA LOCAL INFILE 'C:\Users\thewi\Desktop\DATA\PRODUCT.dat'
REPLACE INTO TABLE PRODUCT
FIELDS TERMINATED BY ','
OPTIONALLY ENCLOSED BY '"'
LINES TERMINATED BY '\n';

"PRODUCT_PCATEGORY DATA"
LOAD DATA LOCAL INFILE 'C:\Users\thewi\Desktop\DATA\PRODUCT_PCATEGORY.dat'
REPLACE INTO TABLE PRODUCT_PCATEGORY
FIELDS TERMINATED BY ','
OPTIONALLY ENCLOSED BY '"'
LINES TERMINATED BY '\n';

"SUPPLIER DATA"
LOAD DATA LOCAL INFILE 'C:\Users\thewi\Desktop\DATA\SUPPLIER.dat'
REPLACE INTO TABLE SUPPLIER
FIELDS TERMINATED BY ','
OPTIONALLY ENCLOSED BY '"'
LINES TERMINATED BY '\n';

"WEBSITE DATA"
LOAD DATA LOCAL INFILE 'C:\Users\thewi\Desktop\DATA\WEBSITE.dat'
REPLACE INTO TABLE WEBSITE
FIELDS TERMINATED BY ','
OPTIONALLY ENCLOSED BY '"'
LINES TERMINATED BY '\n';



SET SQL_SAFE_UPDATES = 1;
SET FOREIGN_KEY_CHECKS = 1;

*/
/* DATA INPUTING DONE */



/* DML COMMANDS */
/* One of each: INSERT, DELETE, UPDATE; */ 

/* CAN USE "INSERT" TO INPUT DATA */

/* INSERT COMMANDS FOR EASY TESTING */

INSERT INTO ACCOUNT
VALUES ("BillyBOBGmail","1111","1234"),("SusanSUEGmail","2222","1235"),("RichardGmail","3333","1236"),("LillyLOGmail","4444","1237");

INSERT INTO ADMIN
VALUES ("MASTERADMIN","2010-10-12"),("LAMEADMIN","2020-11-06");

INSERT INTO CUSTOMER
VALUES ("1234","11223311"),("1235","11526311");

INSERT INTO PERSON
VALUES ("11223311","BOB","BO","BURGER"),("11526311","BILL","TOE","SMITH"),("11129911","WILL","JO","SUSIE");

INSERT INTO PRODUCT
VALUES ("YOYO","WALMART"),("SOCKS","FOREVER21");

INSERT INTO PRODUCT_PCATEGORY
VALUES ("FOREVER21","SOCKS","CLOTHES"),("WALMART","YOYO","TOYS");

INSERT INTO SUPPLIER
VALUES ("WALMART","11526311"),("FOREVER21","11129911");

INSERT INTO WEBSITE
VALUES ("wwwlatechedu","LATECH"),("wwwgooglecom","GOOGLE");




/* ADDING RELATIONSHIP DATA THAT I DIDNT IN THE TERMINAL COMMANDS */

INSERT INTO BENEFITS_FROM
VALUES ("1234","SOCKS","FOREVER21"),("1235","YOYO","WALMART");

INSERT INTO BUYS
VALUES ("BillyBOBGmail","YOYO"),("SusanSUEGmail","SOCKS"),("RichardGmail","YOYO"),("LillyLOGmail","SOCKS");

INSERT INTO MANAGES
VALUES ("MASTERADMIN","wwwlatechedu"),("MASTERADMIN","wwwgooglecom");

INSERT INTO USED_BY
VALUES ("11223311","wwwlatechedu"),("11526311","wwwgooglecom"),("11129911","wwwlatechedu");


/* UPDATE COMMANDS */

/* PEOPLE THAT USE "WWWGOOGLECOM" ARENT AS COOL AS THE PEOPLE THAT USE "WWWLATECHEDU", 
LETS HELP THEM WITH AN UPDATE :) */

UPDATE USED_BY
SET used_WebUrl = "wwwlatechedu"
WHERE used_WebUrl = "wwwgooglecom";


/* DELETE COMMANDS */

/* PEOPLE BENEFIT FROM YOYO'S MORE THAN SOCKS WE SHOULD DELETE THE RELATIONSHIP THATS BENEFITING FROM SOCKS */

DELETE FROM BENEFITS_FROM
WHERE BENEFITS_FROM_PName = "SOCKS";





/* 5 Relational Queries: 2 Complex: (Nested, Aggregate, GroupBy, Having Etc.)*/

/* #1 COMPLEX QUERY --> SELECTS AND COUNTS THE DISTINCT NUMBER OF CCNumS FROM ACCOUNT*/
SELECT COUNT(DISTINCT CCNum)
FROM ACCOUNT;


/* #2 COMPLEX QUERY --> SELECTS ADMIN'S THAT HAVE A START DATE IN OCTOBER (ADate = StartDate)*/
SELECT AUsername
FROM ADMIN
WHERE ADate LIKE '%-10-%';  /* <--- SPECIFIES OCTOBER */  


/* #3 SIMPLE QUERY --> SELECTS (F,M,L)Name from People who use wwwlatechedu */ 
SELECT FName, MName, LName
FROM PERSON, USED_BY 
WHERE used_WebUrl = "wwwlatechedu" and used_PersonIP = PersonIP;


/* #4 SIMPLE QUERY --> SELECTS THE PersonIP OF A PERSON WHO IS A CUSTOMER AND BUYS A YOYO*/
SELECT PersonIP
FROM CUSTOMER, ACCOUNT, BUYS
WHERE AccountUsername = BUYS_AccountUsername and CId = Account_CId and BUYS_PName = "YOYO";



/* #5 SIMPLE QUERY --> SELECTS THE FNAME OF A PERSON WHO HAS two 2's (22) SOMEWHERE IN THE MIDDLE OF THIS PERSONIP */
SELECT FName
FROM PERSON
WHERE PersonIP LIKE '%22%';  

/* 


GROUP BY P.Pnumber, P.Pname
HAVING COUNT(*) > 2;
*/



/* (At least one (1) example of defined trigger) */

/* TRIGGER */
/* DEFINES A TRIGGER THAT WILL ACTIVATE IF THE PERSONIP FIELD IS NULL OR A SPACE */

DELIMITER $$
CREATE TRIGGER PersonIP_NOTNULL
BEFORE INSERT ON PERSON
FOR EACH ROW
BEGIN
	IF (NEW.PersonIP = '' OR NEW.PersonIP IS NULL) 
    THEN 
	SET NEW.PersonIP = "00000000";
	END IF;
END$$
DELIMITER ;





/* TRIGGER EXECUTION   (At least one (1) example of trigger execution.) */
/* TRIGGER EXECUTES IF THE PERSONIP IS = 99999999 AND SAYS IT IS TOO LARGE

DELIMITER $$
CREATE TRIGGER TOO_LARGE_PersonIP
BEFORE INSERT ON PERSON
FOR EACH ROW
BEGIN
	DECLARE MSG VARCHAR(255);
    IF NEW.PersonIP = "99999999"
    THEN /* Cause Error Message */
    SET MSG = 'Persons IP is too big';
    SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = MSG;
    END IF;
END$$
DELIMITER ;

/* TRIGGER EXECUTES HERE BECAUSE PERSONIP = "99999999*/
INSERT INTO PERSON
VALUES ("99999999","B","BOo","BURGERo");





/* VIEWS   (At least three (3) examples of defined views (virtual tables).)*/


/*View #1 - Create a view that provides information about the employees and the projects that they work on.*/
/* MAKES A VIEW OF PEOPLE'S FULLNAMES IF THERE CID IS GREATER THAN 1233 */
CREATE VIEW CUSTOMER_ID_GREATER_THAN_1233
AS SELECT P.FName, P.Mname, P.LName
   FROM PERSON P, CUSTOMER C
   WHERE P.PersonIP = C.PersonIP and CId > 1233;


/* VIEW #2 */ 
/* MAKES A VIEW THAT SHOWS THE LEADER ADMIN "MASTERADMIN" AND THE SUM OF ADMINS AND PEOPLE, WITH THE TOTAL OF THE PEOPLE"S IP NUMBERS */
CREATE VIEW LEADER(ADMIN_LEADER, ADMINS_PLUS_PEOPLE, Total_IP)
AS SELECT AUsername, COUNT(*), SUM(PersonIP)
   FROM PERSON P, ADMIN A
   WHERE AUsername = "MASTERADMIN";


/* VIEW #3 */ 
/* CREATES A VIEW TO SHOW THE CID OF A YOYO OWNER */
CREATE VIEW YOYO_OWNERS(CID_OF_A_YOYO_OWNER)
AS SELECT CId
	FROM CUSTOMER, ACCOUNT, BUYS
	WHERE AccountUsername = BUYS_AccountUsername and CId = Account_CId and BUYS_PName = "YOYO";
















